"""
Django settings for vueimock project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys   #导入sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))      #配置apps目录到根搜索目录
sys.path.insert(0,os.path.join(BASE_DIR,'extra_apps'))   #配置extra_apps目录到根搜索目录


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y7qre0v-314ady6_ucyajk53de&t8mw2-n4vbu*ebv5^i8xm7('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']  #在这里请求的host添加了*可以使用域名访问

AUTH_USER_MODEL = 'users.UserProfile'   #配置UserProfile替换系统的User


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters', #注册django_filters
    'xadmin',  # 注册xadmin
    'crispy_forms',  # 注册xadmin的依赖应用crispy_forms
    'goods.apps.GoodsConfig',   #注册goods
    'rest_framework',   #配置rest_framework
    'rest_framework.authtoken',  #配置drf的authtoken
    'trade.apps.TradeConfig',  #注册trade
    'users.apps.UsersConfig', #注册users
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',   #注释掉，就可以post请求成功
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vueimock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vueimock.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {   #配置数据库为mysql
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "vue_imock",
        'USER':"root",
        'PASSWORD':"root",
        'HOST':"localhost"
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


LANGUAGE_CODE = 'zh-hans'   #语言改为中文

TIME_ZONE = 'Asia/Shanghai'   #时区设置为上海
USE_TZ = False   #时间为本地时间，即上海时间，如果为True，则时间取得的是UTC的时间，即国际时间


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]   #将static加入python跟搜索路径

#网站域名及端口配置
# YMDK = 'http://ynqbsh.com:8000'

#访问图片需要加的配置，还需要在url中做相应配置
MEDIA_URL = "/media/"   #配置访问图片的路径
MEDIA_ROOT = os.path.join(BASE_DIR, "media")   #django默认是不识别media的，要将media配置为MEDIA_ROOT 后才能识别它是存放图片的路径


#drf-extensions缓存配置
REST_FRAMEWORK_EXTENSIONS = {
    'DEFAULT_CACHE_RESPONSE_TIMEOUT': 60*15,   #设置缓存时间为15分钟
}

# REST_FRAMEWORK = {
#        'DEFAULT_AUTHENTICATION_CLASSES': (                                        #配置登录设置，不配置，默认设置就是如此
#         'rest_framework.authentication.SessionAuthentication',   #默认
#         'rest_framework.authentication.BasicAuthentication'    #默认   #输入用户名和密码模式
#        )
# }

# APPEND_SLASH=False   #屏蔽跨域  vue axios.post 报错解决方法


# AUTHENTICATION_BACKENDS = (      #配置自定义登录校验函数
#     'users.views.CustomBackend',   #自定义的Backend，CustomBackend
#     'social_core.backends.weibo.WeiboOAuth2',#配置微博的backend
#     'social_core.backends.qq.QQOAuth2',#配置微信的backend
#     'social_core.backends.weixin.WeixinOAuth2',#配置微信的backend
#     'django.contrib.auth.backends.ModelBackend',   #django自己的ModelBackend
# )

# GLOBAL_CSRF_CHECK = False #跨域请求使用GLOBAL_CSRF_CHECK时，设置为True，不用时，设置为False
GLOBAL_CSRF_CHECK = True